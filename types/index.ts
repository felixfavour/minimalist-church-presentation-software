import { User } from "~/store/auth"

export interface Slide {
  _id?: string
  id: string // ID generated by client side
  index: number // Index of slide in the schedule array
  name: string
  type: string
  layout: string
  userId: string
  churchId: string
  scheduleId: string // ID could be generated client side but must be replaced upon upload.
  contents: Array<string>
  backgroundType?: string
  background?: string
  backgroundVideoKey?: string
  title?: string // For hymn and song titles, also for scripture labels (e.g Ephesians 3:1)
  songId?: string // only for hymns/songs, could be [hymn.number] or [song.id]
  hasChorus?: boolean // only for hymns, to tell if the hymns include a chorus
  data?: Song | Scripture | Hymn | Countdown // for song/bible/hymn/file, Object mapped to Slide only on client
  slideStyle?: SlideStyle,
  createdAt?: string,
  updatedAt?: string
}

export interface Schedule {
  _id: string
  // id: string // ID generated by client side
  name: string
  authorId: string
  editorIds: Array<User> // sorted in the order of most recent person to edit a Slide, with most recent person being the 0th index
  churchId: string
  lastUpdated?: string,
  createdAt?: string,
  updatedAt?: string
}

export interface Alert {
  _id?: string
  id: string // ID generated by client side
  title: string
  icon: string
  style: string
  background: string
  // position: string // top, bottom
}

export interface Countdown {
  _id?: string
  id: string // ID generated by client side
  time: string
  timeLeft: string
  content: string
  // style: string
}

export interface QuickAction {
  icon: string
  name: string
  desc: string
  type: string
  action: string
  unreleased: boolean
  bibleBookIndex?: string
  bibleChapterAndVerse?: string
  hymnIndex?: string
  searchableOnly?: boolean
}

export interface Scripture {
  label: string
  labelShortFormat: string
  version: string
  content: string
}

export interface BibleVerse {
  book: string
  chapter: string
  verse: string
  scripture: string
}

export interface Hymn {
  number: string
  title: string
  chorus: string
  verses: Array<string>
  author: string
  source: string
  meta: string
}

export interface Song {
  _id?: string
  id: string // ID generated by client side
  lyrics: string
  title: string
  artist: string
  album?: string
  cover?: string
  author?: string
  verses?: Array<string>
  isPublic?: boolean
  createdBy?: string
  churchId?: string
  createdAt?: string
  updatedAt?: string
}

export interface Media {
  id: string
  content?: any
  remoteUrl?: string
  data?: ArrayBuffer | string
  createdAt?: string
  updatedAt?: string
}

export interface BackgroundVideo {
  id: string
  url: string
}

export interface LibraryItem {
  id: string
  type: String
  content: Slide | Song
  createdAt?: string
  updatedAt?: string
}

export interface SlideStyle {
  blur?: number
  brightness?: number
  alignment?: string
  font?: string
  linesPerSlide?: number
  fontSize?: number // size in vw[viewportWidth]
  fontSizePercent?: number
  backgroundFillType?: string
  repeatMedia?: boolean
  isMediaPlaying?: boolean // also used to check if countdown is paused or is beginning
  mediaSeekPosition?: number // 0 or -1, -1 means not at the beginning
  isMediaMuted?: boolean
  windowPadding?: { left?: number, right?: number, top?: number, bottom?: number }
  lettercase?: string
}

export interface AppSettings {
  appVersion: string,
  defaultBibleVersion: string,
  defaultFont: string,
  defaultBackground: {
    hymn: { backgroundType: string, background: string, backgroundVideoKey: string },
    bible: { backgroundType: string, background: string, backgroundVideoKey: string },
    text: { backgroundType: string, background: string, backgroundVideoKey: string },
  },
  slideStyles: SlideStyle
  bibleVersions: Array<any>, // Check app.vue for bible versions array in a list
  alertLimit: number
}
